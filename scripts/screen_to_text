#!/bin/bash

# Need to install tesseract and ImageMagick

SRC="/tmp/screen_to_text_tmp"
TES_LANG_OPT=""
TAKE_SCREENSHOT="TRUE"
BULLETS="FALSE"
MULTIPLE="FALSE"

usage() {
  cat 1>&2 << END_HEREDOC
Description
  Mark a box of text which you want the text from. If you specify a
  language, that langauge needs to be installed for tesseract.

  Temporary files will be created at:
  - $SRC-*.png
  - $SRC-*.txt
  - $SRC-*.txt.tmp
  - $SRC.txt

Usage:
  $(basename $0) [options]

Options:
  -h:
    Show this help
  -l <lang>:
    Use <lang> as language in tesseract
  -w <line-width>:
    Format the output in lines of length <line-width>
  -b:
    Bullets
    Handle the input as if it was a bullet list. Will automatically
    insert "- " before each row
  -m:
    Take multiple screenshots. When you're done just press ESC
  -n:
    Don't take a new screen shot. Use the previous one
END_HEREDOC
}

take_screenshots_until_esc() {
  i=0

  while true; do
    name="${SRC}-$i.png"
    gnome-screenshot -a -f "$name"
    if [ ! -f "$name" ]; then
      break
    fi
    ((i++))
  done
}

take_screenshot() {
  gnome-screenshot -a -f "${SRC}-0.png"
}

increase_detection_rate() {
  i=0

  while true; do
    name="${SRC}-$i.png"
    if [ ! -f "$name" ]; then
      break
    fi

    # To increase the detection rate we will first make the image bigger
    mogrify -modulate 100,0 -resize 400% "$name"
    # And then make it sharper
    convert "$name" -sharpen 0x3 "$name"
    ((i++))
  done
}

produce_text() {
  i=0

  if [ -f "${SRC}.txt" ]; then
    rm "${SRC}.txt"
  fi

  while true; do
    name="${SRC}-$i"
    if [ ! -f "${name}.png" ]; then
      break
    elif [ -f "${SRC}.txt" -a -n "${WIDTH+x}" ]; then
      echo -e '\n' >> "${SRC}.txt"
    elif [ -f "${SRC}.txt" -a "$BULLETS" != "TRUE" ]; then
      echo >> "${SRC}.txt"
    fi

    tesseract $TES_LANG_OPT "${name}.png" "${name}" &> /dev/null

    sed -r -i\
        "s/\$3/S3/g
         s/\blf/If/g
         s/Il/I/g
         s/\|/I/g
         # Removes form feed character that tesseract sometimes adds
         s/\x0c//
         s/—/-/g
         s/[“”]/\"/g
         s/[‘’]/'/g
         s/^[-e>«»\*¢©]+ /- /"\
         "${name}.txt"

    if [ "$BULLETS" = "TRUE" ]; then
      sed -r -i\
          "/^\s*$/d
          s/.*/- &/"\
          "${name}.txt"
    fi

    if [ -n "${WIDTH+x}" ]; then
      cat "${name}.txt" | tr '\n' ' ' | sed -r 's/  +/ /g' | fold -s -w$WIDTH | sed -r 's/ *$//g' > "${name}.txt.tmp"
      mv "${name}.txt.tmp" "${name}.txt"
    fi

    cat "${name}.txt" >> "${SRC}.txt"

    ((i++))
  done
}

while getopts ":l:w:hbmn" opt; do
  case $opt in
    l)
      if ! tesseract --list-langs | grep -Eq "^${OPTARG}$"; then
        echo "'$OPTARG' is not among the installed languages for tesseract" 1>&2
        tesseract --list-langs 1>&2
        exit 2
      fi
      TES_LANG_OPT="-l $OPTARG"
      ;;
    w)
      if ! [[ "$OPTARG" =~ ^[0-9]+$ ]]; then
        echo "'$OPTARG' is not a valid number. Use -h for usage"
        exit 1
      fi
      WIDTH=$(( OPTARG + 1 ))
      ;;
    h)
      usage
      exit 1
      ;;
    b)
      BULLETS="TRUE"
      ;;
    m)
      MULTIPLE="TRUE"
      ;;
    n)
      TAKE_SCREENSHOT="FALSE"
      ;;
    \?)
      # Unknown option
      echo "Invalid option: -$OPTARG. Use -h for usage" >&2
      exit 1
      ;;
    :)
      # Argument missing. The option expects an argument
      echo "Option -$OPTARG requires an argument. Use -h for usage" >&2
      exit 1
      ;;
  esac
done
shift $((OPTIND-1))

if [ "$TAKE_SCREENSHOT" = "TRUE" ]; then
  if [ -f "${SRC}-0.png" ]; then
    rm ${SRC}*
  fi

  if [ "$MULTIPLE" = "TRUE" ]; then
    take_screenshots_until_esc
  else
    take_screenshot
  fi
  increase_detection_rate
fi

produce_text

if [ ! -f "$SRC.txt" ]; then
  echo "No screenshot taken. Exiting.." >&2
  exit 2
fi

OUTPUT=$(cat $SRC.txt)

echo "$OUTPUT"
echo -n "$OUTPUT" | xclip
